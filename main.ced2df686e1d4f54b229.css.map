{"version":3,"sources":["webpack://@taylorgrinn/router/./demo/main.scss","webpack://@taylorgrinn/router/./sass/_router-helper.scss","webpack://@taylorgrinn/router/./_index.scss"],"names":[],"mappings":"AAKA,O,CA0BE,Y,CACA,c,CACA,sB,CA3BA,6B,CAAA,yB,CAAA,wB,CAGE,wB,CACA,0B,CC0EF,gD,CDjEE,qD,CCiEF,iD,CDjEE,sD,CCiEF,kD,CDjEE,uD,CCiEF,mD,CDjEE,wD,CADA,wB,CAIA,oD,CAAA,qD,CACE,gB,CAGF,sD,CAAA,qD,CAAA,uD,CAAA,sD,CAEE,Y,CC6EF,gE,MAAA,iB,MAAA,mB,CDtFA,gE,MAAA,iB,MAAA,wB,CCsFA,iE,MAAA,kB,MAAA,oB,CDtFA,iE,MAAA,kB,MAAA,yB,CAAA,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,sB,CAAA,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,sB,CAAA,mE,MAAA,oB,MAAA,mB,MAAA,qB,kBAAA,kB,MAAA,qB,CC2BA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,iB,CD3BA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CC2BA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,iB,CD3BA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CC2BA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,gB,CD3BA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,qB,CAAA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,e,kBAAA,kB,MAAA,qB,CC2BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,iB,CD3BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CC2BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,iB,CD3BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CC2BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,iB,CD3BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CC2BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,iB,CD3BA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CADA,wB,CAIA,gE,MAAA,iB,MAAA,uB,CACE,gB,CAGF,gE,MAAA,iB,MAAA,yB,CAAA,gE,MAAA,iB,MAAA,wB,CAEE,Y,CANF,sD,CAAA,uD,CAAA,8E,CAAA,6E,CACE,gB,CAGF,wD,CAAA,uD,CAAA,yD,CAAA,wD,CAAA,gF,CAAA,+E,CAAA,+E,CAAA,8E,CAEE,Y,CANF,iE,MAAA,kB,MAAA,wB,CACE,gB,CAGF,iE,MAAA,kB,MAAA,0B,CAAA,iE,MAAA,kB,MAAA,yB,CAEE,Y,CCwDJ,wD,CDjEE,6D,CCiEF,sD,CDjEE,2D,CCiEF,yD,CDjEE,8D,CCiEF,0E,CDjEE,+E,CCiEF,yE,CDjEE,8E,CADA,wB,CAIA,4D,CAAA,0D,CAAA,6D,CAAA,8E,CAAA,6E,CACE,gB,CAGF,8D,CAAA,6D,CAAA,4D,CAAA,2D,CAAA,+D,CAAA,8D,CAAA,gF,CAAA,+E,CAAA,+E,CAAA,8E,CAEE,Y,CCkBF,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,iB,CAAA,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,iB,CAAA,mE,MAAA,oB,MAAA,mB,MAAA,qB,kBAAA,kB,MAAA,gB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,iB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,iB,CAAA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,e,kBAAA,kB,MAAA,gB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,iB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,iB,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,uB,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,uB,CD5BA,wB,CAIA,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,qB,CACE,gB,CAGF,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,uB,CAAA,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,sB,CAEE,Y,CCwDJ,wD,CDjEE,6D,CCiEF,sD,CDjEE,2D,CCiEF,yD,CDjEE,8D,CCiEF,0E,CDjEE,+E,CCiEF,yE,CDjEE,8E,CADA,wB,CAIA,4D,CAAA,0D,CAAA,6D,CAAA,4E,CAAA,2E,CACE,gB,CAGF,8D,CAAA,6D,CAAA,4D,CAAA,2D,CAAA,+D,CAAA,8D,CAAA,8E,CAAA,6E,CAAA,6E,CAAA,4E,CAEE,Y,CANF,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,qB,CACE,gB,CAGF,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,uB,CAAA,oE,MAAA,qB,MAAA,mB,MAAA,sB,kBAAA,mB,MAAA,sB,CAEE,Y,CCwDJ,sD,CDjEE,2D,CCiEF,qD,CDjEE,0D,CCiEF,uD,CDjEE,4D,CCiEF,wE,CDjEE,6E,CCiEF,uE,CDjEE,4E,CCiEF,+F,CDjEE,oG,CCiEF,8F,CDjEE,mG,CADA,wB,CAIA,0D,CAAA,yD,CAAA,2D,CAAA,+E,CAAA,kF,CAAA,iF,CAAA,mG,CAAA,kG,CACE,gB,CAGF,4D,CAAA,2D,CAAA,2D,CAAA,0D,CAAA,6D,CAAA,4D,CAAA,iF,CAAA,gF,CAAA,oF,CAAA,mF,CAAA,mF,CAAA,kF,CAAA,qG,CAAA,oG,CAAA,oG,CAAA,mG,CAEE,Y,CANF,mE,MAAA,oB,MAAA,mB,MAAA,qB,kBAAA,kB,MAAA,oB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,qB,CACE,gB,CAGF,mE,MAAA,oB,MAAA,mB,MAAA,qB,kBAAA,kB,MAAA,sB,CAAA,mE,MAAA,oB,MAAA,mB,MAAA,qB,kBAAA,kB,MAAA,qB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,uB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAEE,Y,CCwDJ,4D,CDjEE,iE,CCiEF,wD,CDjEE,6D,CCiEF,0D,CDjEE,+D,CCiEF,6D,CDjEE,kE,CCiEF,2E,CDjEE,gF,CCiEF,8E,CDjEE,mF,CCiEF,6E,CDjEE,kF,CCiEF,8E,CDjEE,mF,CCiEF,6E,CDjEE,kF,CADA,wB,CAIA,gE,CAAA,4D,CAAA,8D,CAAA,iE,CAAA,kF,CAAA,iF,CAAA,mG,CAAA,kG,CACE,gB,CAGF,kE,CAAA,iE,CAAA,8D,CAAA,6D,CAAA,gE,CAAA,+D,CAAA,mE,CAAA,kE,CAAA,oF,CAAA,mF,CAAA,mF,CAAA,kF,CAAA,qG,CAAA,oG,CAAA,oG,CAAA,mG,CAEE,Y,CANF,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,qB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,qB,CACE,gB,CAGF,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,uB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,uB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAEE,Y,CCwDJ,4D,CDjEE,iE,CCiEF,wD,CDjEE,6D,CCiEF,0D,CDjEE,+D,CCiEF,6D,CDjEE,kE,CCiEF,2E,CDjEE,gF,CCiEF,8E,CDjEE,mF,CCiEF,6E,CDjEE,kF,CCiEF,+F,CDjEE,oG,CCiEF,8F,CDjEE,mG,CCiEF,8E,CDjEE,mF,CCiEF,6E,CDjEE,kF,CADA,wB,CAIA,+E,CAAA,kF,CAAA,iF,CACE,gB,CAGF,iF,CAAA,gF,CAAA,oF,CAAA,mF,CAAA,mF,CAAA,kF,CAEE,Y,CANF,gE,CAAA,4D,CAAA,8D,CAAA,iE,CAAA,kF,CAAA,iF,CAAA,iG,CAAA,gG,CACE,gB,CAGF,kE,CAAA,iE,CAAA,8D,CAAA,6D,CAAA,gE,CAAA,+D,CAAA,mE,CAAA,kE,CAAA,oF,CAAA,mF,CAAA,mF,CAAA,kF,CAAA,mG,CAAA,kG,CAAA,kG,CAAA,iG,CAEE,Y,CANF,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,qB,CAAA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,oB,CACE,gB,CAGF,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,uB,CAAA,sE,MAAA,uB,MAAA,mB,MAAA,qB,MAAA,wB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CAAA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,sB,CAAA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,qB,CAEE,Y,CCwDJ,0D,CDjEE,+D,CCiEF,uD,CDjEE,4D,CCiEF,yD,CDjEE,8D,CCiEF,2D,CDjEE,gE,CCiEF,0E,CDjEE,+E,CCiEF,4E,CDjEE,iF,CCiEF,2E,CDjEE,gF,CCiEF,6F,CDjEE,kG,CCiEF,4F,CDjEE,iG,CCiEF,4E,CDjEE,iF,CCiEF,2E,CDjEE,gF,CCiEF,oH,CDjEE,yH,CCiEF,mH,CDjEE,wH,CADA,wB,CAIA,8E,CAAA,gF,CAAA,+E,CACE,gB,CAGF,gF,CAAA,+E,CAAA,kF,CAAA,iF,CAAA,iF,CAAA,gF,CAEE,Y,CANF,8D,CAAA,2D,CAAA,6D,CAAA,+D,CAAA,gF,CAAA,+E,CAAA,oG,CAAA,uG,CAAA,sG,CAAA,wH,CAAA,uH,CACE,gB,CAGF,gE,CAAA,+D,CAAA,6D,CAAA,4D,CAAA,+D,CAAA,8D,CAAA,iE,CAAA,gE,CAAA,kF,CAAA,iF,CAAA,iF,CAAA,gF,CAAA,sG,CAAA,qG,CAAA,yG,CAAA,wG,CAAA,wG,CAAA,uG,CAAA,0H,CAAA,yH,CAAA,yH,CAAA,wH,CAEE,Y,CANF,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,e,kBAAA,kB,MAAA,oB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,qB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,qB,CACE,gB,CAGF,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,e,kBAAA,kB,MAAA,sB,CAAA,qE,MAAA,sB,MAAA,mB,MAAA,qB,MAAA,uB,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,kB,MAAA,e,kBAAA,kB,MAAA,qB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,uB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,uB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAEE,Y,CCwDJ,6E,CDjEE,kF,CCiEF,+E,CDjEE,oF,CCiEF,kF,CDjEE,uF,CCiEF,iF,CDjEE,sF,CCiEF,gG,CDjEE,qG,CCiEF,mG,CDjEE,wG,CCiEF,kG,CDjEE,uG,CCiEF,mG,CDjEE,wG,CCiEF,kG,CDjEE,uG,CADA,wB,CAIA,iF,CAAA,mF,CAAA,sF,CAAA,qF,CAAA,uG,CAAA,sG,CACE,gB,CAGF,mF,CAAA,kF,CAAA,qF,CAAA,oF,CAAA,wF,CAAA,uF,CAAA,uF,CAAA,sF,CAAA,yG,CAAA,wG,CAAA,wG,CAAA,uG,CAEE,Y,CCwDJ,gE,CDjEE,qE,CCiEF,0D,CDjEE,+D,CCiEF,4D,CDjEE,iE,CCiEF,8D,CDjEE,mE,CCiEF,iE,CDjEE,sE,CCiEF,+E,CDjEE,oF,CCiEF,kF,CDjEE,uF,CCiEF,iF,CDjEE,sF,CCiEF,mG,CDjEE,wG,CCiEF,kG,CDjEE,uG,CCiEF,kF,CDjEE,uF,CCiEF,iF,CDjEE,sF,CADA,wB,CAIA,mF,CAAA,sF,CAAA,qF,CAAA,uG,CAAA,sG,CACE,gB,CAGF,qF,CAAA,oF,CAAA,wF,CAAA,uF,CAAA,uF,CAAA,sF,CAAA,yG,CAAA,wG,CAAA,wG,CAAA,uG,CAEE,Y,CANF,oE,CAAA,8D,CAAA,gE,CAAA,kE,CAAA,qE,CAAA,sF,CAAA,qF,CAAA,wH,CAAA,uH,CACE,gB,CAGF,sE,CAAA,qE,CAAA,gE,CAAA,+D,CAAA,kE,CAAA,iE,CAAA,oE,CAAA,mE,CAAA,uE,CAAA,sE,CAAA,wF,CAAA,uF,CAAA,uF,CAAA,sF,CAAA,0H,CAAA,yH,CAAA,yH,CAAA,wH,CAEE,Y,CANF,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,qB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,qB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,qB,CACE,gB,CAGF,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,uB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,uB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,uB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,sB,CAEE,Y,CCwDJ,6E,CDjEE,kF,CCiEF,+E,CDjEE,oF,CCiEF,kF,CDjEE,uF,CCiEF,iF,CDjEE,sF,CCiEF,gG,CDjEE,qG,CCiEF,mG,CDjEE,wG,CCiEF,kG,CDjEE,uG,CCiEF,oH,CDjEE,yH,CCiEF,mH,CDjEE,wH,CCiEF,mG,CDjEE,wG,CCiEF,kG,CDjEE,uG,CADA,wB,CAIA,oG,CAAA,uG,CAAA,sG,CACE,gB,CAGF,sG,CAAA,qG,CAAA,yG,CAAA,wG,CAAA,wG,CAAA,uG,CAEE,Y,CANF,iF,CAAA,mF,CAAA,sF,CAAA,qF,CAAA,uG,CAAA,sG,CACE,gB,CAGF,mF,CAAA,kF,CAAA,qF,CAAA,oF,CAAA,wF,CAAA,uF,CAAA,uF,CAAA,sF,CAAA,yG,CAAA,wG,CAAA,wG,CAAA,uG,CAEE,Y,CCwDJ,gE,CDjEE,qE,CCiEF,0D,CDjEE,+D,CCiEF,4D,CDjEE,iE,CCiEF,8D,CDjEE,mE,CCiEF,iE,CDjEE,sE,CCiEF,+E,CDjEE,oF,CCiEF,kF,CDjEE,uF,CCiEF,iF,CDjEE,sF,CCiEF,mG,CDjEE,wG,CCiEF,kG,CDjEE,uG,CCiEF,kF,CDjEE,uF,CCiEF,iF,CDjEE,sF,CCiEF,0D,CDjEE,+D,CCiEF,2D,CDjEE,gE,CCiEF,0D,CDjEE,+D,CCiEF,2D,CDjEE,gE,CCiEF,gE,CDjEE,qE,CCiEF,iE,CDjEE,sE,CADA,wB,CAIA,mF,CAAA,sF,CAAA,qF,CAAA,uG,CAAA,sG,CACE,gB,CAGF,qF,CAAA,oF,CAAA,wF,CAAA,uF,CAAA,uF,CAAA,sF,CAAA,yG,CAAA,wG,CAAA,wG,CAAA,uG,CAEE,Y,CANF,oE,CAAA,8D,CAAA,gE,CAAA,kE,CAAA,qE,CAAA,sF,CAAA,qF,CACE,gB,CAGF,sE,CAAA,qE,CAAA,gE,CAAA,+D,CAAA,kE,CAAA,iE,CAAA,oE,CAAA,mE,CAAA,uE,CAAA,sE,CAAA,wF,CAAA,uF,CAAA,uF,CAAA,sF,CAEE,Y,CANF,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,qB,CAAA,qE,MAAA,sB,MAAA,4B,CACE,gB,CAGF,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,uB,CAAA,wE,MAAA,yB,MAAA,mB,MAAA,qB,MAAA,uB,MAAA,0B,kBAAA,kB,MAAA,e,MAAA,oB,MAAA,mB,MAAA,uB,MAAA,sB,MAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,kB,MAAA,e,MAAA,qB,MAAA,oB,MAAA,mB,MAAA,gB,kBAAA,mB,MAAA,sB,CAAA,qE,MAAA,sB,MAAA,8B,CAAA,qE,MAAA,sB,MAAA,6B,CAEE,Y,CANF,8D,CAAA,+D,CACE,gB,CAGF,gE,CAAA,+D,CAAA,iE,CAAA,gE,CAEE,Y,CC6EF,mE,MAAA,oB,MAAA,sB,CDtFA,mE,MAAA,oB,MAAA,2B,CCsFA,qE,MAAA,sB,MAAA,wB,CDtFA,qE,MAAA,sB,MAAA,6B,CCsFA,qE,MAAA,sB,MAAA,wB,CDtFA,qE,MAAA,sB,MAAA,6B,CCsFA,wE,MAAA,yB,MAAA,2B,CDtFA,wE,MAAA,yB,MAAA,gC,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,4B,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,4B,CADA,wB,CAIA,8D,CAAA,+D,CACE,gB,CAGF,gE,CAAA,+D,CAAA,iE,CAAA,gE,CAEE,Y,CANF,qE,MAAA,sB,MAAA,4B,CACE,gB,CAGF,qE,MAAA,sB,MAAA,8B,CAAA,qE,MAAA,sB,MAAA,6B,CAEE,Y,CANF,oE,CAAA,qE,CAAA,wG,CAAA,uG,CACE,gB,CAGF,sE,CAAA,qE,CAAA,uE,CAAA,sE,CAAA,0G,CAAA,yG,CAAA,yG,CAAA,wG,CAEE,Y,CANF,wE,MAAA,yB,MAAA,+B,CACE,gB,CAGF,wE,MAAA,yB,MAAA,iC,CAAA,wE,MAAA,yB,MAAA,gC,CAEE,Y,CCwDJ,kF,CDjEE,uF,CCiEF,0E,CDjEE,+E,CCiEF,mF,CDjEE,wF,CCiEF,oG,CDjEE,yG,CCiEF,mG,CDjEE,wG,CADA,wB,CAIA,sF,CAAA,8E,CAAA,uF,CAAA,wG,CAAA,uG,CACE,gB,CAGF,wF,CAAA,uF,CAAA,gF,CAAA,+E,CAAA,yF,CAAA,wF,CAAA,0G,CAAA,yG,CAAA,yG,CAAA,wG,CAEE,Y,CANF,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,2B,CACE,gB,CAGF,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,6B,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,4B,CAEE,Y,CCwDJ,sD,CDjEE,2D,CCiEF,uD,CDjEE,4D,CCiEF,kF,CDjEE,uF,CCiEF,0E,CDjEE,+E,CCiEF,mF,CDjEE,wF,CCiEF,oG,CDjEE,yG,CCiEF,mG,CDjEE,wG,CADA,wB,CAIA,sF,CAAA,8E,CAAA,uF,CACE,gB,CAGF,wF,CAAA,uF,CAAA,gF,CAAA,+E,CAAA,yF,CAAA,wF,CAEE,Y,CANF,mE,MAAA,oB,MAAA,0B,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,2B,CACE,gB,CAGF,mE,MAAA,oB,MAAA,4B,CAAA,mE,MAAA,oB,MAAA,2B,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,6B,CAAA,iF,MAAA,kC,MAAA,0B,MAAA,mC,kBAAA,uB,MAAA,oB,MAAA,gC,MAAA,+B,MAAA,yB,MAAA,4B,CAEE,Y,CANF,0D,CAAA,2D,CACE,gB,CAGF,4D,CAAA,2D,CAAA,6D,CAAA,4D,CAEE,Y,CEoBF,iC,CFNA,qB,CAIJ,Q,CACE,Y,CACA,sB,CAGF,U,CACE,Y,CACA,c,CACA,kB,CAGF,S,CACE,Y,CACA,qB,CACA,sB,CAGF,a,CACE,e,CAGF,E,CAAA,E,CAAA,E,CAGE,yB,CACA,iB,CACA,U,CAGF,M,CAAA,G,CAAA,C,CAGE,gC,CAGF,G,CAKE,O,CACE,Y,CAGA,sB,CATJ,G,CAGE,U,CAEA,O,CAEE,e,CACA,c,CAKJ,M,CAEE,+B,CACA,c,CACA,wB,CAGA,e,CAEA,Y,CACE,wB,CASJ,S,CAnBA,M,CAcA,I,CACE,W,CACA,U,CAGF,S,CACE,qB,CAEA,U","file":"main.ced2df686e1d4f54b229.css","sourcesContent":["@use 'sass:color';\n@use '../' as router;\n\n@import 'router.json';\n\n.router {\n  [data-route] span,\n  span[data-route],\n  .info-box[data-route] {\n    border: 4px solid darkgreen;\n    transition: border-color 1s;\n  }\n\n  @include router.router($router) {\n    /*\n     * These styles are applied when the data-route\n     * attribute **DOES NOT** match the current route\n     */\n    border-color: transparent;\n    span {\n      border-color: transparent;\n    }\n    &.red {\n      border-color: red;\n    }\n\n    &.hide,\n    .hide {\n      display: none;\n    }\n  }\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n}\n\n.blue {\n  @include router.routeChild('/page2') {\n    /*\n     * These styles are applied to the parent selector (.blue)\n     * when the specified route(s) are active\n     */\n    border: 4px solid blue;\n  }\n}\n\n#app > div {\n  display: flex;\n  justify-content: center;\n}\n\n.flex-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n}\n\n.flex-col {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n\n.max-width-md {\n  max-width: 350px;\n}\n\nh1,\nh3,\nh4 {\n  font-family: Georgia, serif;\n  text-align: center;\n  width: 100%;\n}\n\nbutton,\nnav,\np {\n  font-family: Helvetica, sans-serif;\n}\n\nnav {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n\n  & > div {\n    display: flex;\n    max-width: 350px;\n    flex-wrap: wrap;\n    justify-content: center;\n  }\n}\n\nbutton {\n  $background: lightblue;\n  border: 1px solid rgba(0, 0, 0, 0.3);\n  background: none;\n  background-color: $background;\n  margin: 4px;\n  padding: 4px;\n  border-radius: 0;\n\n  &:hover {\n    background-color: darken($background, 10%);\n  }\n}\n\nspan {\n  padding: 4px;\n  margin: 4px;\n}\n\n.info-box {\n  border: 1px solid black;\n  padding: 4px;\n  margin: 2px;\n}\n","@use 'util' as *;\n@use 'sass:list';\n@use 'sass:selector';\n@use 'sass:string';\n@use 'sass:map';\n\n@function get-child-selectors($path) {\n  $tokens: str-split($path, '/');\n  $partials: partials($tokens);\n\n  $selector: '[data-route]';\n\n  @each $partial in partials($tokens, true) {\n    $selector: $selector +\n      \":not([data-route~='^#{$partial}'])\" +\n      \":not([data-route~='#{$partial}'])\";\n  }\n\n  @return $selector;\n}\n\n@function get-final-selectors($path) {\n  $selector: selector-append(\n    '[data-route]',\n    \":not([data-route*='!'])\",\n    \":not([data-route~='#{$path}'])\"\n  );\n\n  $tokens: list-slice(str-split($path, '/'), 2);\n  $tokens: set-nth($tokens, 1, '/' + nth($tokens, 1));\n\n  $partials: partials($tokens);\n\n  @each $partial in $partials {\n    $selector: selector-append($selector, \":not([data-route~='^#{$partial}'])\");\n  }\n\n  @return $selector;\n}\n\n@mixin child-selectors($path) {\n  $tokens: list-slice(str-split($path, '/'), 2);\n  @if length($tokens) > 1 {\n    $childPath: str-slice($path, length(nth($tokens, 1)) + 2);\n    $relPath: str-slice($childPath, 2);\n\n    &#{get-child-selectors($relPath)} {\n      @content;\n\n      @include child-selectors($childPath) {\n        @content;\n      }\n    }\n  } @else {\n    @content;\n  }\n}\n\n@mixin exclusion-selectors($path) {\n  $selectors: \"[data-route~='!#{$path}'],\";\n  $children: '';\n\n  $tokens: str-split($path, '/');\n  @if length($tokens) > 1 and nth($tokens, 1) == '' {\n    $tokens: list-slice($tokens, 2);\n    $tokens: set-nth($tokens, 1, '/' + nth($tokens, 1));\n  }\n  $partials: partials($tokens);\n\n  @for $i from 1 through length($partials) {\n    $partial: nth($partials, $i);\n    $selectors: $selectors + \"[data-route~='!^#{$partial}'],\";\n\n    @if $i < length($tokens) {\n      $tailTokens: list-slice($tokens, $i + 1);\n      $childPath: path-join($tailTokens);\n      [data-route~='^#{$partial}'] {\n        @include exclusion-selectors($childPath) {\n          @content;\n        }\n      }\n    }\n  }\n\n  #{$selectors} {\n    @content;\n  }\n}\n\n@mixin router-helper($page, $path: '') {\n  $children: [];\n  @if type-of($page) == 'string' {\n    $path: $path + $page;\n  } @else {\n    $path: $path + map-get($page, 'path');\n    @if map-has-key($page, 'children') {\n      $children: map-get($page, 'children');\n    }\n  }\n\n  &[data-route-state='#{$path}'] {\n    @include exclusion-selectors($path) {\n      @content;\n    }\n\n    #{get-final-selectors($path)} {\n      @include child-selectors($path) {\n        @content;\n      }\n    }\n  }\n\n  @if type-of($children) != 'list' {\n    @include router-helper($children, $path) {\n      @content;\n    }\n  } @else {\n    @each $child in $children {\n      @include router-helper($child, $path) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:meta';\n@use 'sass:list';\n@use 'sass/router-helper' as *;\n@use 'sass/get-routes' as *;\n\n@mixin router($config) {\n  $routes: get-routes($config);\n\n  $pages: map-get($config, 'pages');\n\n  @if map-has-key($config, 'fallback') {\n    $pages: append($pages, map-get($config, 'fallback'));\n  }\n\n  @if type-of($pages) != 'list' {\n    @if content-exists() {\n      @include router-helper($pages) {\n        @content;\n      }\n    } @else {\n      @include router-helper($pages) {\n        display: none;\n        pointer-events: none;\n      }\n    }\n  } @else {\n    @each $page in $pages {\n      @if content-exists() {\n        @include router-helper($page) {\n          @content;\n        }\n      } @else {\n        @include router-helper($page) {\n          display: none;\n          pointer-events: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin routeChild($routes...) {\n  $selectors: '';\n  @each $route in $routes {\n    $selectors: $selectors + \"[data-route-state='#{$route}'] &,\";\n  }\n\n  @if $selectors != '' {\n    #{$selectors} {\n      @content;\n    }\n  }\n}\n"],"sourceRoot":""}