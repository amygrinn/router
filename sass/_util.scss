@use 'sass:string';
@use 'sass:map';

@function str-split($string, $sep) {
  $i: str-index($string, $sep);

  @if $i {
    $head: str-slice($string, 1, $i - 1);
    $tail: str-slice($string, $i + 1);

    @return join($head, str-split($tail, $sep));
  }

  @return ($string);
}

@function list-slice($list, $start: 1, $end: length($list)) {
  $result: [];

  @for $i from $start through $end {
    $result: append($result, nth($list, $i));
  }

  @return $result;
}

@function partials($tokens, $all: false) {
  @if length($tokens) == 0 {
    @return [];
  }

  $partials: (nth($tokens, 1));

  @if length($tokens) > 1 {
    $accumulator: nth($tokens, 1);
    $tokens: list-slice($tokens, 2);

    @each $token in $tokens {
      $accumulator: $accumulator + '/' + $token;
      $partials: append($partials, $accumulator);
    }

    @if $all {
      $partials: join($partials, partials($tokens, $all));
    }
  }

  @return $partials;
}

@function path-join($tokens) {
  @if length($tokens) == 0 {
    @return '';
  }

  $result: nth($tokens, 1);

  @if length($tokens) > 1 {
    @for $i from 2 through length($tokens) {
      $result: '#{$result}/#{nth($tokens, $i)}';
    }
  }

  @return $result;
}
